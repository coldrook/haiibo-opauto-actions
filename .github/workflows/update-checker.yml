#
# Copyright (c) 2019-2021 smallprogram
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# File: .github/workflows/Update_Checker.yml
# Description: Source code update checker
#

name: Update_Checker

env:
  REPO_URL_Lede: https://github.com/coolsnowwolf/lede
  REPO_BRANCH_Lede: master
  REPO_PATH_Lede : "lede"
  
  REPO_URL_HelloWorld: https://github.com/fw876/helloworld
  REPO_BRANCH_HelloWorld: master
  REPO_PATH_HelloWorld : "helloworld"

  REPO_URL_PassWall: https://github.com/xiaorouji/openwrt-passwall
  REPO_BRANCH_PassWall: main
  REPO_PATH_PassWall : "openwrt-passwall"

  REPO_URL_PassWallPackages: https://github.com/xiaorouji/openwrt-passwall-packages
  REPO_BRANCH_PassWallPackages: main
  REPO_PATH_PassWallPackages : "openwrt-passwall-packages"
  
on:
  workflow_dispatch:
  schedule:
    - cron: 0 */6 * * *

jobs:
  check:
    runs-on: ubuntu-latest

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
      
        git clone --depth 1 $REPO_URL_Lede -b $REPO_BRANCH_Lede $REPO_PATH_Lede
        cd $REPO_PATH_Lede
        echo "commitHash_Lede=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd

        git clone --depth 1 $REPO_URL_HelloWorld -b $REPO_BRANCH_HelloWorld $REPO_PATH_HelloWorld 
        cd $REPO_PATH_HelloWorld
        echo "commitHash_HelloWorld=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd

        git clone --depth 1 $REPO_URL_PassWall -b $REPO_BRANCH_PassWall $REPO_PATH_PassWall
        cd $REPO_PATH_PassWall
        echo "commitHash_PassWall=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd

        git clone --depth 1 $REPO_URL_PassWallPackages -b $REPO_BRANCH_PassWallPackages $REPO_PATH_PassWallPackages
        cd $REPO_PATH_PassWallPackages
        echo "commitHash_PassWallPackages=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd
        
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Lede: ${{ steps.getHash.outputs.commitHash_Lede }}"
        echo "commitHash_HelloWorld: ${{ steps.getHash.outputs.commitHash_HelloWorld }}"
        echo "commitHash_PassWall: ${{ steps.getHash.outputs.commitHash_PassWall }}"
        echo "commitHash_PassWallPackages: ${{ steps.getHash.outputs.commitHash_PassWallPackages }}"
        echo "commitHash_All=${{steps.getHash.outputs.commitHash_Lede}}\
          ${{steps.getHash.outputs.commitHash_HelloWorld}}\
          ${{steps.getHash.outputs.commitHash_PassWall}}\
          ${{steps.getHash.outputs.commitHash_PassWallPackages}}" >> $GITHUB_OUTPUT

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v3
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}
   

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Lede }} | tee .commitHash_Lede
        echo ${{ steps.getHash.outputs.commitHash_HelloWorld }} | tee .commitHash_HelloWorld
        echo ${{ steps.getHash.outputs.commitHash_PassWall }} | tee .commitHash_PassWall
        echo ${{ steps.getHash.outputs.commitHash_PassWallPackages }} | tee .commitHash_PassWallPackages
        echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All   
        
    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.ACTIONS_HAIIBO_PAT }}
        event-type: Source Code Update

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.ACTIONS_HAIIBO_PAT }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 5

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        repo: ${{ github.repository }}
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
